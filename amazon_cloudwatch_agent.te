policy_module(amazon_cloudwatch_agent, 1.0.0)

require {
    type unconfined_t;
    type bin_t;
    type var_log_t;
    type var_run_t;
    type proc_t;
    type sysfs_t;
    class file { getattr open read execute execute_no_trans };
    class dir { search getattr read };
    class lnk_file { read };
}

type amazon_cloudwatch_agent_t;
type amazon_cloudwatch_agent_exec_t;
init_daemon_domain(amazon_cloudwatch_agent_t, amazon_cloudwatch_agent_exec_t)

# Allow all permissions
allow amazon_cloudwatch_agent_t self:process { fork setpgid signal_perms };
allow amazon_cloudwatch_agent_t self:fifo_file rw_fifo_file_perms;
allow amazon_cloudwatch_agent_t self:unix_stream_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:tcp_socket create_stream_socket_perms;

# Very permissive network access
corenet_tcp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_udp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_raw_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_tcp_connect_all_ports(amazon_cloudwatch_agent_t)
corenet_sendrecv_all_client_packets(amazon_cloudwatch_agent_t)

# File permissions
files_read_etc_files(amazon_cloudwatch_agent_t)
files_read_usr_files(amazon_cloudwatch_agent_t)
files_read_var_files(amazon_cloudwatch_agent_t)

# Allow reading and writing to most directories
allow amazon_cloudwatch_agent_t var_log_t:dir { read write getattr search add_name remove_name };
allow amazon_cloudwatch_agent_t var_log_t:file { create open read write getattr };

# Allow executing binaries
corecmd_exec_bin(amazon_cloudwatch_agent_t)
corecmd_exec_shell(amazon_cloudwatch_agent_t)

# Allow reading system information
kernel_read_system_state(amazon_cloudwatch_agent_t)
kernel_read_network_state(amazon_cloudwatch_agent_t)

# Permissive rules to allow all actions
permissive amazon_cloudwatch_agent_t;