policy_module(amazon_cloudwatch_agent, 1.0.2)

require {
    type unconfined_t;
    type bin_t;
    type var_log_t;
    type var_run_t;
    type passwd_file_t;
    type user_devpts_t;
    type init_t;
    type sshd_t;
    type sysfs_t;
    type sysctl_net_t;
    type lib_t;
    type usr_t;
    type etc_t;
    type devpts_t;
    type tmpfs_t;
    type ramfs_t;
    type configfs_t;
    type devtmpfs_t;
    type fs_t;
    type blk_file_t;
    type tmp_t;
    type unconfined_service_t;
    type chkpwd_t;
    type system_dbusd_t;
    type mail_port_t;
    type unreserved_port_t;
    type random_device_t, device_t;
    attribute file_type;

    type fixed_disk_device_t;
    type cgroup_t;
    type pstore_t;
    type efivarfs_t;
    type bpf_t;
    type debugfs_t;
    type tracefs_t;
    type hugetlbfs_t;
    type fusefs_t;
    type dosfs_t;
    type rpc_pipefs_t;
    class file { getattr open read execute execute_no_trans append setattr create unlink map };
    class dir { open read write search getattr add_name remove_name setattr list_dir_perms };
    class lnk_file { read getattr };
    class netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };
    class process { fork setpgid signal_perms siginh noatsecure rlimitinh };
    class system module_request;
    class capability { net_admin chown fowner dac_override };
    class chr_file { read write };
    class fifo_file rw_fifo_file_perms;
    class unix_stream_socket create_stream_socket_perms;
    class tcp_socket { create_stream_socket_perms name_bind };
    class udp_socket { create setopt connect getattr write read create_socket_perms };
    class blk_file getattr;
    class filesystem { getattr };

}

type amazon_cloudwatch_agent_t;
type amazon_cloudwatch_agent_exec_t;
init_daemon_domain(amazon_cloudwatch_agent_t, amazon_cloudwatch_agent_exec_t)

# Allow all permissions
allow amazon_cloudwatch_agent_t self:process { fork setpgid signal_perms };
allow amazon_cloudwatch_agent_t self:fifo_file rw_fifo_file_perms;
allow amazon_cloudwatch_agent_t self:unix_stream_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:tcp_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:udp_socket create_socket_perms;

# Network access
corenet_tcp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_udp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_raw_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_tcp_connect_all_ports(amazon_cloudwatch_agent_t)
corenet_sendrecv_all_client_packets(amazon_cloudwatch_agent_t)

# Allow reading all directories
allow amazon_cloudwatch_agent_t file_type:dir { read getattr open search };

# Allow reading all files
allow amazon_cloudwatch_agent_t file_type:file { read getattr open };

# Allow reading all symlinks
allow amazon_cloudwatch_agent_t file_type:lnk_file { read getattr };

# Allow reading
allow amazon_cloudwatch_agent_t var_log_t:dir { setattr search open read getattr };
allow amazon_cloudwatch_agent_t var_log_t:file { getattr open read setattr };
allow amazon_cloudwatch_agent_t etc_t:file { getattr open read };

allow sshd_t chkpwd_t:process { noatsecure rlimitinh siginh };
allow system_dbusd_t self:capability dac_override;
allow amazon_cloudwatch_agent_t sysctl_net_t:dir search;
allow amazon_cloudwatch_agent_t sysctl_net_t:file { read open getattr };

# New rules based on recent denials
allow amazon_cloudwatch_agent_t self:netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };

# Additional rules for other contexts
allow init_t unconfined_service_t:process siginh;
allow chkpwd_t user_devpts_t:chr_file { read write };
allow amazon_cloudwatch_agent_t amazon_cloudwatch_agent_exec_t:dir { open read write search getattr add_name remove_name setattr list_dir_perms };
allow amazon_cloudwatch_agent_t amazon_cloudwatch_agent_exec_t:file { create open read write getattr unlink execute_no_trans append setattr };

# New rules based on AVC messages
allow amazon_cloudwatch_agent_t mail_port_t:tcp_socket name_bind;
allow amazon_cloudwatch_agent_t init_t:dir search;
allow amazon_cloudwatch_agent_t init_t:file { getattr read open };
allow amazon_cloudwatch_agent_t self:udp_socket { create setopt connect getattr write read };
allow amazon_cloudwatch_agent_t unreserved_port_t:tcp_socket name_bind;
allow amazon_cloudwatch_agent_t tmp_t:dir { write add_name create unlink };
allow amazon_cloudwatch_agent_t tmp_t:file { write create unlink };

allow init_t amazon_cloudwatch_agent_exec_t:file ioctl;
allow amazon_cloudwatch_agent_t tmp_t:dir { remove_name };
allow amazon_cloudwatch_agent_t tmp_t:file { map };


# Allow DNS resolution
sysnet_dns_name_resolve(amazon_cloudwatch_agent_t)

# Logging
logging_send_syslog_msg(amazon_cloudwatch_agent_t)

# Allow CloudWatch Agent to read and get attributes of various filesystems
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:dir { read open getattr search };
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:file { read open getattr };
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:filesystem getattr;
allow amazon_cloudwatch_agent_t sysfs_t:dir { read getattr search };



# New rules to address the denials
allow amazon_cloudwatch_agent_t fixed_disk_device_t:blk_file getattr;
allow amazon_cloudwatch_agent_t device_t:filesystem getattr;
allow amazon_cloudwatch_agent_t tmpfs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t cgroup_t:filesystem getattr;
allow amazon_cloudwatch_agent_t pstore_t:filesystem getattr;
allow amazon_cloudwatch_agent_t efivarfs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t bpf_t:filesystem getattr;
allow amazon_cloudwatch_agent_t fs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t debugfs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t tracefs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t hugetlbfs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t configfs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t fusefs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t dosfs_t:filesystem getattr;
allow amazon_cloudwatch_agent_t rpc_pipefs_t:filesystem getattr;

# New general filesystem access rules
fs_getattr_all_fs(amazon_cloudwatch_agent_t)
dev_getattr_all_blk_files(amazon_cloudwatch_agent_t)

# New file and directory access rules
files_read_all_files(amazon_cloudwatch_agent_t)
files_getattr_all_dirs(amazon_cloudwatch_agent_t)


files_list_home(amazon_cloudwatch_agent_t)
files_list_tmp(amazon_cloudwatch_agent_t)
files_list_var(amazon_cloudwatch_agent_t)

# If the agent needs to list contents of system directories, add these:
files_list_etc(amazon_cloudwatch_agent_t)
files_list_usr(amazon_cloudwatch_agent_t)

# For listing contents of all non-security-sensitive directories:
files_list_non_security(amazon_cloudwatch_agent_t)

# If the agent needs to list contents of all directories (use with caution):
files_list_all(amazon_cloudwatch_agent_t)

# New kernel and device access rules
kernel_read_all_proc(amazon_cloudwatch_agent_t)
dev_read_sysfs(amazon_cloudwatch_agent_t)
kernel_read_system_state(amazon_cloudwatch_agent_t)
storage_raw_read_fixed_disk(amazon_cloudwatch_agent_t)
dev_read_sysfs(amazon_cloudwatch_agent_t)
dev_read_urand(amazon_cloudwatch_agent_t)
dev_read_rand(amazon_cloudwatch_agent_t)

# If the agent needs to get attributes of block devices:
dev_getattr_all_blk_files(amazon_cloudwatch_agent_t)

# If the agent needs to get attributes of character devices:
dev_getattr_all_chr_files(amazon_cloudwatch_agent_t)

# For more general device access (use with caution):
dev_getattr_generic_files(amazon_cloudwatch_agent_t)