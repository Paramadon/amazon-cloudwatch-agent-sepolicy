policy_module(amazon_cloudwatch_agent, 1.0.3)

require {
    type amazon_cloudwatch_agent_t;
    type amazon_cloudwatch_agent_exec_t;
    type var_log_t;
    type var_run_t;
    type proc_t;
    type sysfs_t;
    type cgroup_t;
    type passwd_file_t;
    type devpts_t;
    type tmp_t;
    type systemd_systemctl_exec_t;
    type fusefs_t;
    type configfs_t;
    type nfsd_fs_t;
    type efivarfs_t;
    type bpf_t;
    type mqueue_t;
    type pstorefs_t;
    type debugfs_t;
    type tracefs_t;
    type device_t;
    type tmpfs_t;
    type boot_t;
    type init_t;
    type sysctl_net_t;
    type unreserved_port_t;
    type mail_port_t;
    attribute file_type;
    attribute device_type;

    class file { getattr open read write append create unlink execute execute_no_trans setattr };
    class dir { getattr open read write search add_name remove_name setattr };
    class sock_file { getattr open read write };
    class fifo_file { getattr open read write };
    class filesystem getattr;
    class unix_stream_socket { create_stream_socket_perms connectto };
    class netlink_route_socket { create bind read write nlmsg_read nlmsg_write getattr };
    class udp_socket { create connect getattr setopt read write };
    class tcp_socket { create_stream_socket_perms name_bind };
    class capability { net_admin chown fowner dac_override };
    class process { fork setpgid signal_perms siginh noatsecure rlimitinh };
    class system module_request;
}

type amazon_cloudwatch_agent_t;
type amazon_cloudwatch_agent_exec_t;
init_daemon_domain(amazon_cloudwatch_agent_t, amazon_cloudwatch_agent_exec_t)

# Allow all permissions for self
allow amazon_cloudwatch_agent_t self:process { fork setpgid signal_perms };
allow amazon_cloudwatch_agent_t self:fifo_file rw_fifo_file_perms;
allow amazon_cloudwatch_agent_t self:unix_stream_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:tcp_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:udp_socket create_socket_perms;
allow amazon_cloudwatch_agent_t self:netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };
allow amazon_cloudwatch_agent_t self:capability { net_admin chown fowner dac_override };

# File permissions
allow amazon_cloudwatch_agent_t file_type:dir { getattr open read search write add_name remove_name setattr };
allow amazon_cloudwatch_agent_t file_type:file { getattr open read write append create unlink setattr };
allow amazon_cloudwatch_agent_t file_type:sock_file { getattr open read write };
allow amazon_cloudwatch_agent_t file_type:fifo_file { getattr open read write };

# Device permissions
allow amazon_cloudwatch_agent_t device_type:dir { getattr open read search };
allow amazon_cloudwatch_agent_t device_type:file { getattr open read };

# Filesystem permissions
allow amazon_cloudwatch_agent_t file_type:filesystem getattr;

# Specific type permissions
allow amazon_cloudwatch_agent_t var_log_t:dir { setattr search open read write getattr add_name remove_name };
allow amazon_cloudwatch_agent_t var_log_t:file { getattr open read write create setattr unlink };
allow amazon_cloudwatch_agent_t proc_t:file { getattr open read };
allow amazon_cloudwatch_agent_t proc_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t sysfs_t:file { getattr open read };
allow amazon_cloudwatch_agent_t sysfs_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t cgroup_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t passwd_file_t:file { getattr open read };
allow amazon_cloudwatch_agent_t init_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t init_t:file { getattr open read };
allow amazon_cloudwatch_agent_t sysctl_net_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t sysctl_net_t:file { getattr open read };

# Network permissions
allow amazon_cloudwatch_agent_t unreserved_port_t:tcp_socket name_bind;
allow amazon_cloudwatch_agent_t mail_port_t:tcp_socket name_bind;

# Execution permissions
can_exec(amazon_cloudwatch_agent_t, amazon_cloudwatch_agent_exec_t)

# Additional permissions
allow amazon_cloudwatch_agent_t self:unix_stream_socket connectto;
allow amazon_cloudwatch_agent_t self:system module_request;

# Broad network access
corenet_tcp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_udp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_raw_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_tcp_connect_all_ports(amazon_cloudwatch_agent_t)
corenet_sendrecv_all_client_packets(amazon_cloudwatch_agent_t)

# System information access
kernel_read_system_state(amazon_cloudwatch_agent_t)
kernel_read_network_state(amazon_cloudwatch_agent_t)

# Execute binaries and shell
corecmd_exec_bin(amazon_cloudwatch_agent_t)
corecmd_exec_shell(amazon_cloudwatch_agent_t)

# DNS resolution
sysnet_dns_name_resolve(amazon_cloudwatch_agent_t)

# Logging
logging_send_syslog_msg(amazon_cloudwatch_agent_t)

# Allow CloudWatch Agent to read and get attributes of various filesystems
allow amazon_cloudwatch_agent_t { devpts_t hugetlbfs_t tmp_t systemd_systemctl_exec_t fusefs_t configfs_t nfsd_fs_t efivarfs_t bpf_t mqueue_t pstorefs_t debugfs_t tracefs_t tmpfs_t boot_t }:dir { read open getattr search };
allow amazon_cloudwatch_agent_t { devpts_t hugetlbfs_t tmp_t systemd_systemctl_exec_t fusefs_t configfs_t nfsd_fs_t efivarfs_t bpf_t mqueue_t pstorefs_t debugfs_t tracefs_t tmpfs_t boot_t }:file { read open getattr };
allow amazon_cloudwatch_agent_t { devpts_t hugetlbfs_t tmp_t systemd_systemctl_exec_t fusefs_t configfs_t nfsd_fs_t efivarfs_t bpf_t mqueue_t pstorefs_t debugfs_t tracefs_t tmpfs_t boot_t }:filesystem getattr;