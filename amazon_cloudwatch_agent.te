policy_module(amazon_cloudwatch_agent, 1.0.6)

require {
    type unconfined_t;
    type bin_t;
    type var_log_t;
    type var_run_t;
    type passwd_file_t;
    type user_devpts_t;
    type init_t;
    type sshd_t;
    type sysfs_t;
    type sysctl_net_t;
    type lib_t;
    type usr_t;
    type etc_t;
    type devpts_t;
    type tmpfs_t;
    type ramfs_t;
    type configfs_t;
    type devtmpfs_t;
    type fs_t;
    type blk_file_t;
    type tmp_t;
    type unconfined_service_t;
    type chkpwd_t;
    type system_dbusd_t;
    type mail_port_t;
    type unreserved_port_t;
    type random_device_t;
    type device_t;
    type fixed_disk_device_t;
    type cgroup_t;
    type pstore_t;
    type efivarfs_t;
    type bpf_t;
    type debugfs_t;
    type tracefs_t;
    type hugetlbfs_t;
    type fusefs_t;
    type dosfs_t;
    type rpc_pipefs_t;

    class file { getattr open read execute execute_no_trans append setattr create unlink map };
    class dir { open read write search getattr add_name remove_name setattr };
    class lnk_file { read getattr };
    class netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };
    class process { fork setpgid signal_perms siginh noatsecure rlimitinh };
    class system module_request;
    class capability { net_admin chown fowner dac_override };
    class chr_file { read write };
    class fifo_file rw_fifo_file_perms;
    class unix_stream_socket create_stream_socket_perms;
    class tcp_socket { create_stream_socket_perms name_bind };
    class udp_socket { create setopt connect getattr write read };
    class blk_file getattr;
    class filesystem getattr;
}

type amazon_cloudwatch_agent_t;
type amazon_cloudwatch_agent_exec_t;
init_daemon_domain(amazon_cloudwatch_agent_t, amazon_cloudwatch_agent_exec_t)

# Allow all permissions for self
allow amazon_cloudwatch_agent_t self:process { fork setpgid signal_perms };
allow amazon_cloudwatch_agent_t self:fifo_file rw_fifo_file_perms;
allow amazon_cloudwatch_agent_t self:unix_stream_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:tcp_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:udp_socket { create setopt connect getattr write read };

# Network access
corenet_tcp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_udp_bind_generic_node(amazon_cloudwatch_agent_t)
corenet_tcp_connect_all_ports(amazon_cloudwatch_agent_t)

# File and directory access
allow amazon_cloudwatch_agent_t var_log_t:dir { setattr search open read getattr };
allow amazon_cloudwatch_agent_t var_log_t:file { getattr open read setattr };
allow amazon_cloudwatch_agent_t etc_t:file { getattr open read };

# Network-related rules
allow amazon_cloudwatch_agent_t self:netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };
allow amazon_cloudwatch_agent_t sysctl_net_t:dir search;
allow amazon_cloudwatch_agent_t sysctl_net_t:file { read open getattr };

# Filesystem access
allow amazon_cloudwatch_agent_t fixed_disk_device_t:blk_file getattr;
allow amazon_cloudwatch_agent_t { device_t tmpfs_t cgroup_t pstore_t efivarfs_t bpf_t fs_t debugfs_t tracefs_t hugetlbfs_t configfs_t fusefs_t dosfs_t rpc_pipefs_t }:filesystem getattr;

# Additional permissions
allow amazon_cloudwatch_agent_t tmp_t:dir { write add_name create unlink remove_name };
allow amazon_cloudwatch_agent_t tmp_t:file { write create unlink map };

# Allow DNS resolution
sysnet_dns_name_resolve(amazon_cloudwatch_agent_t)

# Logging
logging_send_syslog_msg(amazon_cloudwatch_agent_t)

# Read access to various system information
kernel_read_system_state(amazon_cloudwatch_agent_t)
dev_read_sysfs(amazon_cloudwatch_agent_t)
dev_read_urand(amazon_cloudwatch_agent_t)
fs_getattr_all_fs(amazon_cloudwatch_agent_t)

# If needed, allow reading all files (use with caution)
# files_read_all_files(amazon_cloudwatch_agent_t)

# Allow binding to specific ports
allow amazon_cloudwatch_agent_t { mail_port_t unreserved_port_t }:tcp_socket name_bind;