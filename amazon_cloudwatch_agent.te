# Define the policy module for Amazon CloudWatch Agent
policy_module(amazon_cloudwatch_agent, 1.0.2)

# Requirements for various types and classes that the CloudWatch Agent interacts with
require {
    type unconfined_t;
    type bin_t;                     # Binary files (for execution)
    type var_run_t;                  # Runtime data (typically for temporary runtime files)
    type user_devpts_t;              # User-space devices
    type init_t;                     # Initial process (system initialization)
    type proc_t;                     # Process directory (for process-related files)
    type proc_net_t;                 # Network process information
    type sysfs_t;                    # System information (virtual filesystem)
    type cgroup_t;                   # Control groups for process resource management
    type udev_var_run_t;             # Udev-related runtime data
    type udev_t;                     # Udev daemon
    type var_log_t;                  # Log directory
    type fs_t;                       # File system-related types
    type passwd_file_t;              # Password file for user authentication
    type fixed_disk_device_t;        # Fixed disk device files
    type kernel_t;                   # Kernel-related files
    type crond_t;                    # Cron daemon
    type unlabeled_t;                # Unlabeled process or file
    type syslogd_t;                  # Syslog daemon
    type rngd_t;                     # Random number generator daemon
    type systemd_userdbd_t;          # Systemd user database daemon
    type statsd_port_t;              # Statsd metric ports
    type systemd_resolved_t;         # Systemd resolver daemon
    type systemd_networkd_t;         # Systemd network daemon
    type irqbalance_t;               # IRQ balancing daemon
    type systemd_logind_t;           # Systemd login daemon
    type getty_t;                    # Getty (console login) process
    type gssproxy_t;                 # GSS Proxy
    type httpd_config_t;             # Apache HTTP server config
    type http_port_t;                # HTTP service port
    type sshd_t;                     # SSH daemon
    type sysctl_net_t;               # Network settings configuration files
    type lib_t;                      # Libraries
    type usr_t;                      # User-related directories/files
    type etc_t;                      # System configuration files
    type devpts_t;                   # Device pseudoterminals
    type node_t;                     # Node (container nodes)
    type ephemeral_port_t;           # Ephemeral ports for dynamic networking
    type tmp_t;                      # Temporary directory
    type unconfined_service_t;       # Unconfined services
    type chkpwd_t;                   # Check password process
    type system_dbusd_t;             # D-Bus daemon
    type lsmd_t;                     # LSM daemon (Linux Security Modules)
    type chronyd_t;                  # Chrony daemon
    type auditd_t;                   # Audit daemon
    type mail_port_t;                # Mail port
    type user_tmp_t;                 # User temporary files
    type unreserved_port_t;          # Unreserved ports
    type random_device_t, device_t;  # Random device files
    attribute file_type;             # File types
    class file { getattr map open read execute execute_no_trans append setattr create unlink write };
    class dir { open read write search getattr add_name remove_name setattr list_dir_perms };
    class lnk_file { read getattr };
    class netlink_route_socket { create bind write read nlmsg_read nlmsg_write getattr };
    class process { fork setpgid signal_perms siginh noatsecure rlimitinh };
    class system module_request;
    class capability { net_admin chown fowner dac_override setgid setuid dac_read_search };
    class chr_file { read write };
    class fifo_file rw_fifo_file_perms;
    class unix_stream_socket create_stream_socket_perms;
    class tcp_socket { create_stream_socket_perms name_bind node_bind name_connect };
    class udp_socket { create setopt connect getattr write read create_socket_perms };
    class filesystem { getattr };
    class blk_file { getattr open read };
    class sock_file { getattr open read write };
}

# Define CloudWatch Agent's specific types
type amazon_cloudwatch_agent_t;
type amazon_cloudwatch_agent_exec_t;

# Link the CloudWatch Agent to its execution context
init_daemon_domain(amazon_cloudwatch_agent_t, amazon_cloudwatch_agent_exec_t)

# Allow CloudWatch Agent to fork processes and set process group IDs
allow amazon_cloudwatch_agent_t self:process { fork setpgid };

# Allow CloudWatch Agent to interact with various socket types (UDP/TCP) for communication
allow amazon_cloudwatch_agent_t self:fifo_file rw_fifo_file_perms;
allow amazon_cloudwatch_agent_t self:unix_stream_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:tcp_socket create_stream_socket_perms;
allow amazon_cloudwatch_agent_t self:udp_socket create_socket_perms;
allow amazon_cloudwatch_agent_t self:udp_socket { connect send_msg };
allow amazon_cloudwatch_agent_t unreserved_port_t:udp_socket name_bind;

# Allow CloudWatch Agent to interact with node sockets (TCP/UDP) for network bindings
allow amazon_cloudwatch_agent_t node_t:tcp_socket node_bind;
allow amazon_cloudwatch_agent_t node_t:udp_socket node_bind;
allow amazon_cloudwatch_agent_t unreserved_port_t:tcp_socket { name_connect name_bind };
allow amazon_cloudwatch_agent_t ephemeral_port_t:tcp_socket name_connect;

# Allow CloudWatch Agent to read directories and files needed for metric benchmarks
allow amazon_cloudwatch_agent_t auditd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t auditd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t auditd_t:lnk_file read;

# Allow CloudWatch Agent to map executable files (for running binaries)
allow amazon_cloudwatch_agent_t bin_t:file map;

# Allow CloudWatch Agent to interact with various system directories (like /proc, /sys) for system info
allow amazon_cloudwatch_agent_t { var_log_t proc_t sysfs_t }:dir { read getattr open search };
allow amazon_cloudwatch_agent_t { var_log_t proc_t sysfs_t }:file { read getattr open };

# Allow CloudWatch Agent to access specific filesystems
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:dir { read open getattr search };
allow amazon_cloudwatch_agent_t { devpts_t tmp_t }:file { read open getattr };

# Allow CloudWatch Agent to read from password and shadow files for user management
allow amazon_cloudwatch_agent_t passwd_file_t:file { read open getattr };

# Allow CloudWatch Agent to interact with various daemon processes like syslog, ssh, systemd, etc.
allow amazon_cloudwatch_agent_t syslogd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t syslogd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t syslogd_t:lnk_file read;
allow amazon_cloudwatch_agent_t sshd_t:dir { getattr open read search };
allow amazon_cloudwatch_agent_t sshd_t:file { getattr open read };
allow amazon_cloudwatch_agent_t sshd_t:lnk_file read;

# Allow CloudWatch Agent to get attributes for filesystems, disk devices, and kernel information
allow amazon_cloudwatch_agent_t fixed_disk_device_t:blk_file { getattr open read };
allow amazon_cloudwatch_agent_t kernel_t:system syslog_read;

# Allow CloudWatch Agent to read Apache HTTP server configuration files (if monitoring web servers)
allow amazon_cloudwatch_agent_t httpd_config_t:file { getattr open read };

# Allow CloudWatch Agent to connect to HTTP ports for metric submission
allow amazon_cloudwatch_agent_t http_port_t:tcp_socket name_connect;

# Allow CloudWatch Agent to interact with log files
allow amazon_cloudwatch_agent_t var_log_t:dir { add_name write remove_name };
allow amazon_cloudwatch_agent_t var_log_t:file { append open setattr create write unlink };

# Allow CloudWatch Agent to resolve DNS names (needed for networking)
sysnet_dns_name_resolve(amazon_cloudwatch_agent_t)

# Logging: Allow CloudWatch Agent to send logs to syslog
logging_send_syslog_msg(amazon_cloudwatch_agent_t)

# Clean-up and only necessary sections are included
